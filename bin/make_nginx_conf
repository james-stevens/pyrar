#! /bin/sh
# (c) Copyright 2019-2022, James Stevens ... see LICENSE for details
# Alternative license arrangements possible, contact me for more information

. /run/policy_subst/env.inc

severity="${LOGLEVEL_NGINX:-warn}"
facility="${FACILITY_NGINX:-local0}"


function if_has_pem()
{
	if test -f ${BASE}/pems/server.pem
		then
			cp -a ${BASE}/pems/server.pem /run/server.pem
			echo "
			listen ${1} ssl;

			ssl_certificate /run/server.pem;
			ssl_certificate_key /run/server.pem;

			ssl_session_cache    shared:SSL:1m;
			ssl_session_timeout  5m;

			ssl_ciphers  HIGH:!aNULL:!MD5;
			ssl_prefer_server_ciphers  on;"
		else
			echo "listen ${2};"
		fi
}


{
echo "
worker_processes  3;
pid /run/nginx.pid;

events { worker_connections  1024; }

user nginx;
error_log syslog:server=unix:/dev/log,facility=${facility},tag=nginx error;

http {
	fastcgi_intercept_errors on;
	proxy_set_header X-Forwaded-For \$proxy_add_x_forwarded_for;

	include         mime.types;
	default_type    application/octet-stream;
	gzip			on;
	sendfile        on;
	keepalive_timeout  65;

	upstream wsgi_webui { server unix:/run/wsgi_webui.sock; }
	upstream wsgi_admin { server unix:/run/wsgi_admin.sock; }

	server {
		access_log syslog:server=unix:/dev/log,facility=${facility},tag=nginx_webui,severity=${severity};
		error_page 404 =200 /;


"

if_has_pem 443 80

echo "
		location /pyrar { proxy_pass http://wsgi_webui/pyrar; }
		root ${BASE}/htdocs;
		}

	server {
		access_log syslog:server=unix:/dev/log,facility=${facility},tag=nginx_admin,severity=${severity};
		error_page 404 =200 /;
		auth_basic 'Unauthorised Access Prohibited';
		auth_basic_user_file /run/admin_logins;
		location /usr/ { alias ${BASE}/htdocs/; }
		location /img/ { alias ${BASE}/htdocs/img/; }
		location /icons/ { alias ${BASE}/htdocs/icons/; }
		location /adm { proxy_pass http://wsgi_admin/adm; }
		root ${BASE}/admin_htdocs;"

if_has_pem 1000 1000
echo "
		location /api {
			proxy_set_header X-API-Key '${PDNS_API_KEY}';
			proxy_pass http://127.0.0.1:8081/api;
			}
	}"

awk 'BEGIN { fac="'"${facility}"'"; lvl="'"${severity}"'"; }
	{
	printf "\tupstream epp_%s {\n",$1
	printf "\t\tserver unix:/run/epp/wsgi_epprest_%s_1.sock;\n",$1
	print "\t\t}"
	printf "\tserver {\n\t\tlisten %d;\n\t\tlocation / {\n",$2
	printf "\t\t\taccess_log syslog:server=unix:/dev/log,facility=%s,tag=nginx_epp_%s,severity=%s;\n",fac,$1,lvl;
	printf "\t\t\tproxy_pass http://epp_%s;\n",$1;
	print "\t\t\t}\n\t\t}\n"
	}' /run/regs_ports

echo "}"

} > /run/nginx.conf

/usr/local/bin/make_admin_logins
