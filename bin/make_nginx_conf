#! /bin/sh
# (c) Copyright 2019-2022, James Stevens ... see LICENSE for details
# Alternative license arrangements possible, contact me for more information

lvl="$(jq .loglevel_nginx ${BASE}/etc/policy.json | tr -d '"')"
if test "${lvl}" = "null"; then lvl="info"; fi

fac="$(jq .facility_nginx ${BASE}/etc/policy.json | tr -d '"')"
if test "${fac}" = "null"; then fac="local0"; fi


{
echo "
worker_processes  3;
pid /run/nginx.pid;

events { worker_connections  1024; }

user nginx;
error_log syslog:server=unix:/dev/log,facility=${fac},tag=nginx error;

http {
	fastcgi_intercept_errors on;
	proxy_set_header X-Forwaded-For \$proxy_add_x_forwarded_for;

	include         mime.types;
	default_type    application/octet-stream;
	sendfile        on;
	keepalive_timeout  65;

	upstream wsgi_checker {
		server unix:/run/wsgi_checker.sock;
		}
	server {
		access_log syslog:server=unix:/dev/log,facility=${fac},tag=nginx_webui,severity=${lvl};
		error_page 404 =200 /;


"


if test -f ${BASE}/pems/server.pem
	then
		cp -a ${BASE}/pems/server.pem /run/server.pem
		echo "
        listen 443 ssl;

        ssl_certificate /run/server.pem;
        ssl_certificate_key /run/server.pem;

        ssl_session_cache    shared:SSL:1m;
        ssl_session_timeout  5m;

        ssl_ciphers  HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers  on;"
	else
		echo "listen 80;"
	fi

echo "
		location /pyrar {
			proxy_pass http://wsgi_checker/pyrar;
			}
		root ${BASE}/htdocs;
		}"

awk 'BEGIN { fac="'"${fac}"'"; lvl="'"${lvl}"'"; }
	{
	printf "\tupstream epp_%s {\n",$1
	printf "\t\tserver unix:/run/epp/wsgi_epprest_%s_1.sock;\n",$1
	print "\t\t}"
	printf "\tserver {\n\t\tlisten %d;\n\t\tlocation / {\n",$2
	printf "\t\t\taccess_log syslog:server=unix:/dev/log,facility=%s,tag=nginx_epp_%s,severity=%s;\n",fac,$1,lvl;
	printf "\t\t\tproxy_pass http://epp_%s;\n",$1;
	print "\t\t\t}\n\t\t}\n"
	}' /run/regs_ports

echo "}"

} > /run/nginx.conf
