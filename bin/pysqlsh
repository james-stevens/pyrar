#! /usr/bin/python3

import sys
import os
import json

import MySQLdb as mdb

from MySQLdb.constants import FIELD_TYPE
import MySQLdb.converters


def convert_string(data):
    if isinstance(data, bytes):
        return data.decode("utf8")
    return data

def convert_datetime(data):
    return data


my_conv = MySQLdb.converters.conversions.copy()
my_conv[FIELD_TYPE.VARCHAR] = convert_string
my_conv[FIELD_TYPE.CHAR] = convert_string
my_conv[FIELD_TYPE.STRING] = convert_string
my_conv[FIELD_TYPE.VAR_STRING] = convert_string
my_conv[FIELD_TYPE.DATETIME] = convert_datetime


def mysql_connect():
    """ Connect to MySQL based on ENV vars """
    sock = "/tmp/mysql.sock"
    host = None
    port = None
    if "MYSQL_CONNECT" in os.environ:
        conn = os.environ["MYSQL_CONNECT"]
        if conn.find("/") >= 0:
            sock = conn
        else:
            host = conn
            port = 3306
            if conn.find(":") >= 0:
                svr = conn.split(":")
                host = svr[0]
                port = int(svr[1])

    return mdb.connect(
        user=os.environ["MYSQL_USERNAME"],
        passwd=os.environ["MYSQL_PASSWORD"],
        unix_socket=sock,
        host=host,
        port=port,
        db=os.environ["MYSQL_DATABASE"],
        conv=my_conv,
        charset='utf8mb4',
        init_command='set names utf8mb4',
    )

def max_width(titles):
    max=0
    for t in titles:
        l = len(t)
        if l > max:
            max = l
    return max


def verbose_output(cursor):
    titles = [ t[0] for t in cursor.description ]
    wdth = max_width(titles)
    for r in cursor:
        x=0;
        for c in r:
            print(f"{titles[x]:{wdth}} = {c}")
            x += 1
        print("")



cnx = mysql_connect()

del sys.argv[0]
for sql in sys.argv:
    cursor = cnx.cursor()
    cursor.execute(sql)
    res = cursor.fetchall()
    print("|".join([ t[0] for t in cursor.description ]))
    for r in res:
        print("|".join([ str(i) for i in r]))
    cnx.commit()


cnx.close()
